name: Production CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  # tests:

  #   runs-on: ubuntu-latest

  #   steps:
  #     - name: Checkout
  #       uses: actions/checkout@v3

  #     - name: Setup PHP
  #       uses: shivammathur/setup-php@v2
  #       with:
  #         php-version: '8.3'
  #         extensions: openswoole
  #         tools: composer:v2
  #         coverage: xdebug

  #     - name: Copy .env
  #       run: php -r "file_exists('.env') || copy('.env.example', '.env');"

  #     - name: Install Dependencies
  #       run: composer install -q --no-ansi --no-interaction --no-scripts --no-progress --prefer-dist

  #     - name: Generate key
  #       run: php artisan key:generate

  #     - name: Directory Permissions
  #       run: chmod -R 777 storage bootstrap/cache

  #     - name: Create Database
  #       run: |
  #         mkdir -p database
  #         touch database/database.sqlite

  #     - name: Set up Bun
  #       uses: oven-sh/setup-bun@v2
  #       with:
  #         bun-version: latest

  #     - name: Install and build Javascript assets
  #       run: |
  #         bun i
  #         bun run build

  #     - name: Execute tests (Unit and Feature tests) via Pest
  #       env:
  #         DB_CONNECTION: sqlite
  #         DB_DATABASE: database/database.sqlite
  #       run: ./vendor/bin/pest

  #     - name: Perform Coverage checks via Pest
  #       env:
  #         XDEBUG_MODE: coverage
  #       run: ./vendor/bin/pest --coverage

  deploy:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    steps:
      - name: Deploy
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          password: ${{ secrets.PASSWORD }}
          port: ${{ secrets.PORT }}
#          key: ${{ secrets.SSHKEY }}
          script: |
            cd /home/webapps/phalco.app
            eval `ssh-agent`
            ssh-add ~/.ssh/github_id_ed25519
            git pull origin main
            export BUN_INSTALL="$HOME/.bun"
            export PATH=$BUN_INSTALL/bin:$PATH
            bun i
            bun run build
            composer install
            php artisan migrate --force
            php artisan octane:reload
            php artisan horizon:terminate
            php artisan reverb:restart
            php artisan pulse:restart
            tail -n 30 /var/log/phalco/octane.log
            echo 'Deployment successful to server!'